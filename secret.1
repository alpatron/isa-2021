.TH SECRET 1
.SH NAME
secret \- covert file transmission using ICMP packets
.SH SYNOPSIS
.B secret 
\fB\-s\fR \fIFILEPATH\fR
\fB\-r\fR \fIADDRESS\fR
.br
.B secret \-l
.SH DESCRIPTION
.B secret
is used to covertly send and receive files by "smuggling" them through ICMP (or ICMPv6) echo-request packets.
This is possible due to the fact that echo-request packets may contain an arbitrary payload.
The file transmission is also encrypted in transit (AES-128).
The program make sure that all packets have been received by the server (reliable delivery),
but it DOES NOT guarantee that at the server a listening instance of the program is running.
.PP
When sending, a \fIFILEPATH\fR and a server \fIADDRESS\fR is specified.
The file is transmitted and the program terminates once all packets of the transmission have been received by the server
(however, the server may not be running a listening instance of the \fBsecret\fR program; in that case, the file is transmitted but not actually saved by the server).
The server address MUST be either an IPv4 or IPv6 address, or a hostname that resolves to such an address.
Other address types are NOT supported.
There is a limit of about 6 TB on the maximum size of a transmitted file.
Trying to transmit a file larger than this results in undefined behaviour.
There is also a limit on the maximum filename length of 1391 characters.
.PP
When receiving, the program listens to all incoming ICMP (or IMCPv6) traffic and processes any incoming transmissions continuously until the program is externally terminated.
The program saves the received files in the working directory.
If a file with the received filename already exists, the received filename is renamed to not be duplicate.
This program DOES NOT generate echo-response packets, nor does it signal to the client that the server is running.
The ICMP (or ICMPv6) echo service of the operating system MUST be running.
If it is not running, fragmented file transmissions are NOT possible (i.e. of files larger than about 1400 bytes).
This program DOES NOT support simultaneous file transfers; if a file transfer occurs while processing another file transfer, the new file transfer probably gets lost.
.SH OPTIONS
.PP
\fB\-s\fR
.RS 4
The address of the server to transmit the file to. Can be an IPv4 or IPv6 address or a hostname that resolves to such an address. (Cannot be used with the \fB-l\fR switch.) 
.RE
.PP
\fB\-r\fR
.RS 4
The path to the file to transmit. (Cannot be used with the \fB-l\fR switch.) 
.RE
.PP
\fB\-s\fR
.RS 4
Start the program in listening mode. (Cannot be used with the \fB-s\fR and \fB-r\fR options.) 
.RE
.SH EXIT STATUS
.TP
.B 0
Successful termination
.TP
.B 3
Wrong command-line arguments
.TP
.B 4
Error while resolving the server address (syntax error in address or a hostname that doesn't exist)
.TP
.B 5
Fatal error when in listening mode (see the command-line output for details)
.TP
.B 6
Fatal error when sending a file (see the command-line output for details)
.SH CONFORMING TO
This program conforms to the specifications given in the ISA course of the 2021 winter semester at FIT VUT. Namely "Programování síťové služby", project "Přenos souboru skrz skrytý kanál (dr. Grégr)".
.SH AUTHORS
Viktor Rucký (xrucky01)
.SH SEE ALSO
For more detailed information about the workings of this program, see the included documentation (manual.pdf) or read through the source files.
.SH HANDED-IN FILES
addressResolution.cpp/hpp -- Code for resolving the address/hostname in the command-line arguments
.br
argumentParsing.cpp/hpp   -- Code for handling the command-line parameters
.br
exitCodes.hpp             -- Definitions for the exit codes used by the program
.br
main.cpp                  -- The entry point of the program
.br
Makefile                  -- The Makefile which compiles this project
.br
manual.pdf                -- The comprehensive documentation to this program and its protocol
.br
receiveFile.cpp/hpp       -- Code for the server portion of the program
.br
secret.1                  -- The source code to the manual page you are reading
.br
sendFile.cpp/hpp          -- Code for the client portion of the program
.br
tools.cpp/hpp             -- Code used by both the server and client portions of the program
